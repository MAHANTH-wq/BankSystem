// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Project bank_system {
    database_type: 'PostgreSQL'
}

TABLE users as U {
  username varcha [pk]
  hashed_password varchar [not null]
  full_name varchar [not null]
  email varchar [unique, not null]
  is_email_verified bool [not null, default: false]
  last_password_changed_at timestamptz [not null,default:`0001-01-01 00:00:00+00Z`]
  created_at timestamptz [not null, default:`now()`]
}

Table verify_emails{
  id bigserial [pk]
  username varchar [not null, ref: > U.username]
  email varchar [not null]
  secret_code varchar [not null, note: 'used to verify email']
  is_used bool [not null, default: false]
  expired_at timestamptz [not null,default: `now() + interval '15 minutes'`]
  created_at timestamptz [not null, default:`now()`]
}

Table accounts as A {
  id bigserial [pk]//auto-increment
  owner varchar [not null,ref: > U.username]
  balance bigint [not null]
  currency varchar [not null]
  created_at timestamptz [not null ,default: `now()`]

  Indexes {
    owner
    (owner,currency) [unique]
  }
}

Table entries{
  id bigserial [pk]
  account_id bigint [ref: > A.id, not null] //inline relationship (many-to-one)
  amount bigint [not null, note: 'can be negative or positive']
  created_at timestamptz [not null,default: `now()`]

  Indexes {
    account_id
  }
}

Table transfers{
  id bigserial [pk,not null]
  from_account_id bigint [not null,ref: > A.id]
  to_account_id bigint [not null, ref: > A.id]
  amount bigint [not null, note: 'only positive']
  created_at timestamptz [not null,default: `now()`]

  Indexes {
    from_account_id
    to_account_id
    (from_account_id,to_account_id)
  }
}

Table sessions{
  id bigserial [pk]
  username varchar [not null,ref: > U.username]
  refresh_token varchar [not null]
  user_agent varchar [not null]
  client_ip varchar [not null]
  is_blocked boolean [not null]
  expires_at timestamptz [not null]
  created_at timestamptz [not null,default: `now()`]

}

