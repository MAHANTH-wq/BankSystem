name: Deploy to Production

on:
  push:
    branches: [ "main" ]
permissions:
  id-token: write
  contents: write
  pages: write

jobs:

  deploy:
    name: Build Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    
    - name: Install Kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.33.3' # default is latest stable
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "us-east-2"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Load Secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id simple_bank_secrets --query SecretString --output text| jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: banksystem
        IMAGE_TAG: ${{ github.sha }}
      run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY
    - name: Update Kube Config
      run: aws eks update-kubeconfig --name bank-system --region us-east-2
    
    - name: Deploy Image to Amazon EKS
      run: |
        kubectl apply -f eks/read-group.yaml
        kubectl apply -f eks/aws-auth.yaml
        kubectl rollout restart -f eks/deployment.yaml
        kubectl apply -f eks/service.yaml
        kubectl apply -f eks/issuer.yaml
        kubectl apply -f eks/ingress.yaml



